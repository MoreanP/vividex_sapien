defaults:
  - task: dex_sapien

name: train_bc

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "debug"

horizon: 1
n_obs_steps: 1
n_action_steps: 1
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
keypoint_visible_rate: 1.0
obs_as_global_cond: True
noisy_points: False
noisy_states: False
point_cs: world
test_task_name: all

policy:
  _target_: algos.imitate.policy.bc.BC
  encoder_output_dim: 64
  use_pc_color: false
  pointnet_type: "pointnet"
  shape_meta: ${shape_meta}

  pointcloud_encoder_cfg:
    in_channels: 3
    out_channels: ${policy.encoder_output_dim}
    use_layernorm: true
    final_norm: layernorm # layernorm, none
    normal_channel: false
    point_cs: ${point_cs}

dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: False
  pin_memory: True
  persistent_workers: False

optimizer:
  _target_: torch.optim.AdamW
  lr: 1.0e-5

training:
  device: "cuda:0"
  seed: 42
  debug: False
  resume: True
  lr_scheduler: constant
  lr_warmup_steps: 0
  num_epochs: 3000
  gradient_accumulate_every: 1
  use_ema: False
  rollout_every: 500
  checkpoint_every: 200
  val_every: 200
  sample_every: 3000
  max_train_steps: null
  max_val_steps: null
  tqdm_interval_sec: 0.5

logging:
  group: ${exp_name}
  id: null
  mode: online
  name: ${training.seed}
  project: bc
  resume: true
  tags:
  - bc

checkpoint:
  save_ckpt: True # if True, save checkpoint every checkpoint_every
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 1
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True # this only saves when save_ckpt is True
  save_last_snapshot: False
  eval_dir: 'outputs'

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
